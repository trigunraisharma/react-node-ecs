name: Deploy Backend

on:
  workflow_run:
    workflows: ["Provision Infrastructure"]
    types:
      - completed
    
jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ----------------------------
      # Authenticate Docker to ECR
      # ----------------------------
      - name: Login to ECR
        run: |
          ECR_REPO=$(aws ssm get-parameter --name "/my-react-node-app/ecr_repo_url" --query "Parameter.Value" --output text)
          echo "Logging in to ECR: $ECR_REPO"
          aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REPO

      # ----------------------------
      # Build Docker image
      # ----------------------------
      - name: Build and Push Docker image
        id: build
        run: |
          docker build -t $ECR_REPO:latest ./backend
          docker push $ECR_REPO:latest

      # ----------------------------
      # Update ECS Service
      # ----------------------------
      - name: Update ECS service
        run: |
          CLUSTER=$(aws ssm get-parameter --name "/my-react-node-app/ecs_cluster" --query "Parameter.Value" --output text)
          SERVICE=$(aws ssm get-parameter --name "/my-react-node-app/ecs_service" --query "Parameter.Value" --output text)
          ECR_REPO=$(aws ssm get-parameter --name "/my-react-node-app/ecr_repo_url" --query "Parameter.Value" --output text)
          aws ecs update-service --cluster $CLUSTER --service $SERVICE --force-new-deployment --image $ECR_REPO:latest

